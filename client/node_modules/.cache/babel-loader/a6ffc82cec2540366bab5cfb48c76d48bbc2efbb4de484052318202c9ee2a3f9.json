{"ast":null,"code":"import * as api from '../api';\nexport const fetchAllUsers = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllUsers();\n    dispatch({\n      type: 'FETCH_USERS',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateProfile = (id, updateData) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateProfile(id, updateData);\n    dispatch({\n      type: 'UPDATE_CURRENT_USER',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","fetchAllUsers","dispatch","data","getAllUsers","type","payload","error","console","log","updateProfile","id","updateData"],"sources":["D:/projec/clone/stack-overflow/client/src/actions/users.js"],"sourcesContent":["import * as api from '../api'\r\n\r\nexport const fetchAllUsers = () => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.getAllUsers();\r\n        dispatch({type: 'FETCH_USERS',payload: data})\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const updateProfile = (id, updateData) => async (dispatch) => {\r\n    try {\r\n      const { data } = await api.updateProfile(id, updateData);\r\n      dispatch({ type: 'UPDATE_CURRENT_USER', payload: data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAE7B,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACnD,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACI,WAAW,EAAE;IACtCF,QAAQ,CAAC;MAACG,IAAI,EAAE,aAAa;MAACC,OAAO,EAAEH;IAAI,CAAC,CAAC;EACjD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMG,aAAa,GAAGA,CAACC,EAAE,EAAEC,UAAU,KAAK,MAAOV,QAAQ,IAAK;EACjE,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACU,aAAa,CAACC,EAAE,EAAEC,UAAU,CAAC;IACxDV,QAAQ,CAAC;MAAEG,IAAI,EAAE,qBAAqB;MAAEC,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC1D,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}